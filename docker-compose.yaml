services:
  hivemq:
    image: hivemq/hivemq4  # Official HiveMQ Community Edition image
    container_name: broker
    restart: unless-stopped
    # Ports
    ports:
      - "1883:1883"  # MQTT protocol (default port)
      - "8080:8080"  # Web UI (optional, default port)
      - "8883:8883"  # MQTT over SSL (optional, default port)
      - "8000:8000" # Websocket
    volumes:
      - hivemq-data:/opt/hivemq/data   # data (sessions, persistent messages)&#8203;:contentReference[oaicite:6]{index=6}
      - hivemq-logs:/opt/hivemq/log    # log files (persist logs outside container)
      - hivemq-conf:/opt/hivemq/conf   # configuration files (config.xml, etc)&#8203;:contentReference[oaicite:7]{index=7}
    # JVM and HiveMQ environment variables
    environment:
      - "JAVA_OPTS=-Xms256m -Xmx1g"   # adjust JVM heap (set max heap)&#8203;:contentReference[oaicite:8]{index=8}
      - "HIVEMQ_LOG_LEVEL=INFO"       # optional: set log verbosity (DEBUG, INFO, etc)

  frontend:
    build: 
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - frontend_node_modules:/app/node_modules
      - sensor-data-volume:/data
      - user_data_volume:/user
    environment:
      NEXT_PUBLIC_ALERT_FIRST_MATCH_ONLY: ${NEXT_PUBLIC_ALERT_FIRST_MATCH_ONLY}

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: backend
    restart: unless-stopped
    volumes:
      - ./src/backend:/app
      - backend_node_modules:/app/node_modules
      - sensor-data-volume:/data
    environment:
      - BACKEND_ENV=production

  data:
    container_name: data
    build:
      context: .
      dockerfile: ./docker/data/Dockerfile
    volumes:
      - sensor-data-volume:/data
    restart: unless-stopped
    command: >
      sh -c "while true; do
        sleep 5;  # Adjust the interval as needed
      done"

  user:
    container_name: user
    build:
      context: .
      dockerfile: ./docker/user/Dockerfile
    volumes:
      - user_data_volume:/data
    restart: unless-stopped
    command: >
      sh -c "while true; do
        sleep 5;  # Adjust the interval as needed
      done"

  nginx:
    image: nginx:alpine
    container_name: proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - frontend

networks:
  default:
    driver: bridge
    name: MQTT.d-NETWORK

volumes:
  hivemq-data:
  hivemq-logs:
  hivemq-conf:
  nextjs-volumes:
  sensor-data-volume:
  frontend_node_modules:
  backend_node_modules:
  user_data_volume: